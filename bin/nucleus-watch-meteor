#!/usr/bin/env node

var cli = require("commander"),
    path = require("path"),
    Watcher = require("../lib/fs_watcher").Watcher,
    app_inspector = require("../lib/app_crash_inspector.js"),
    backup_demon = require("../lib/backup_demon.js"),
    args = process.argv.filter(function(a) {return !!a;});


cli
  .version("0.0.1")
  .option("-d, --dir <dir>", "Directory to watch changes in")
  .option("-u, --url <url>", "Url where meteor app is running")
  .option("-w, --wait <n>","Wait time in milliseconds", parseInt)
  .parse(args);

if (! cli.dir || ! cli.url) {
  cli.help();
}

var dir = /~/.test(dir) ? path.resolve(dir.replace('~',process.env.HOME)) : path.resolve(cli.dir),
    wait = cli.wait || 2000,
    url = cli.url.indexOf("http") === 0 ? cli.url : "http://"+cli.url,
    project_name = path.basename(dir);

var backup = new backup_demon.Backup_Demon({app_dir: dir, project_name: project_name});

backup.setup();

var watcher = new Watcher(dir, url);

watcher.start_watching(function(file) {
  app_inspector.if_crashed(url, function() {
    console.log("APP IS CRASHING ﴾͡๏̯͡๏﴿");
    // backup.revert_to_clean();
    backup.revert_file(file);
  }, function() {
    //on every non-crashing change, we make a commit to our backup branch
    backup.clean_commit(file);
  });
});
